Sm4Util.java: 179             System.out.println("加密前源数据————" + json);
Sm4Util.java: 183             System.out.println(key + "-----生成key");
Sm4Util.java: 185             System.out.println("加密串---" + cipher);
Sm4Util.java: 188             System.out.println("解密后数据---" + json);
Sm4Util.java: 192             System.out.println("解密后数据---" + deBy);
BehavioralTrajectoryDataSearchImplTest.java: 34         String s = "[{\"type\": 3, \"occurTime\":1655446038000,\"changeItem\":\"居住地址\",\"valueBefore\":\"九龙\",\"valueAfter\":\"尖沙咀\"},{\"type\": 3, \"occurTime\":1655446038000,\"changeItem\":\"联系电话号码1\",\"valueBefore\":\"908832233\",\"valueAfter\":\"89888999\"}]";
AppMain.java: 38             logger.error("aml启动报错", e);
PortraitInfoController.java: 25 @Api(tags = "客户画像信息")
PortraitInfoController.java: 30     @ApiOperation(value = "查询客户信息")
PortraitInfoController.java: 37     @ApiOperation(value = "导出用户画像")
PortraitInfoController.java: 44     @ApiOperation(value = "查询额外信息")
ApplicationConfController.java: 23 @Api(tags = "应用配置")
ApplicationConfController.java: 27     @ApiOperation(value = "分页查询")
ApplicationConfController.java: 34     @ApiOperation(value = "查询")
ApplicationConfController.java: 40     @ApiOperation(value = "新增")
ApplicationConfController.java: 47     @ApiOperation(value = "修改")
ApplicationConfController.java: 54     @ApiOperation(value = "删除")
PortraitController.java: 35 @Api(tags = "客户画像配置")
PortraitController.java: 40     @ApiOperation(value = "查询全部属性")
PortraitController.java: 47     @ApiOperation(value = "查询概览属性")
PortraitController.java: 54     @ApiOperation(value = "查询基本属性")
PortraitController.java: 61     @ApiOperation(value = "查询实体")
PortraitController.java: 68     @ApiOperation(value = "刷新")
PortraitController.java: 75     @ApiOperation(value = "保存")
TransAnalyseController.java: 28     @ApiOperation(value = "资金流分析")
TransAnalyseController.java: 35     @ApiOperation(value = "资金流分析导出")
GraphController.java: 23     @ApiOperation(value = "关联关系")
GraphController.java: 29     @ApiOperation(value = "图析工具")
RosterVerificationController.java: 33 @Api(tags = "名单查证")
RosterVerificationController.java: 38     @ApiOperation(value = "列表查询")
RosterVerificationController.java: 46     @ApiOperation(value = "新增任务")
RosterVerificationController.java: 54     @ApiOperation(value = "删除任务")
RosterVerificationController.java: 62     @ApiOperation(value = "修改任务")
RosterVerificationController.java: 70     @ApiOperation(value = "任务运行")
RosterVerificationController.java: 77     @ApiOperation(value = "任务停止")
RosterVerificationController.java: 84     @ApiOperation("任务日志")
RosterVerificationController.java: 90     @ApiOperation(value = "下载文件")
RosterVerificationController.java: 99     @ApiOperation("运行历史")
RosterVerificationController.java: 106     @ApiOperation(value = "模板文件")
RosterVerificationController.java: 115     @ApiOperation(value = "名单文件上传")
RosterVerificationController.java: 124     @ApiOperation("名单文件删除")
TempController.java: 25     private final static StringBuilder s = new StringBuilder("{\"success\":true,\"result\":[{\"id\":
TempController.java: 35         String resultStr = "{\"success\":true,\"result\":[{\"customerId\":\"NGA_972841000010218031\",\"companyName\":\"巴斯夫一体化基地有限公司\",\"type\":1}],\"code\":200,\"reason\":null}";
SwaggerConfig.java: 44                 .title("yuntu-aml-swagger文档")
SwaggerConfig.java: 45                 .description("swagger接口文档")
SwaggerConfig.java: 58                 .apis(RequestHandlerSelectors.basePackage("cn.tongdun.yuntu.aml")) // swagger扫描路径
SwaggerConfig.java: 71                 .name("token") // 参数名
SwaggerConfig.java: 73                 .description("登录认证token") // 描述
PortraitQueryInfoCmd.java: 18 @ApiModel(value = "查询客户画像信息")
PortraitQueryInfoCmd.java: 23     @ApiModelProperty(name = "type", value = "客户类型", required = true)
PortraitQueryInfoCmd.java: 26     @ApiModelProperty(name = "curCustomerUid", value = "客户标识", required = true)
PortraitInfoDownloadCmd.java: 18 @ApiModel(value = "导出用户画像")
PortraitInfoDownloadCmd.java: 23     @ApiModelProperty(name = "type", value = "客户类型", required = true)
PortraitInfoDownloadCmd.java: 26     @ApiModelProperty(name = "curCustomerUid", value = "客户id", required = true)
ApplicationConfQueryCmd.java: 14 @ApiModel(value = "应用配置分页查询")
ApplicationConfQueryCmd.java: 22     @ApiModelProperty(name = "curPage", value = "当前页")
ApplicationConfQueryCmd.java: 25     @ApiModelProperty(name = "pageSize", value = "页码")
ApplicationConfCmd.java: 15 @ApiModel(value = "应用配置")
ApplicationConfCmd.java: 29     @ApiModelProperty(name = "description", value = "描述", required = false)
UuidCmd.java: 16 @ApiModel(value = "uuid请求")
UuidCmd.java: 20     @ApiModelProperty(name = "uuid", value = "唯一标识", required = true)
PagingQry.java: 20     @ApiModelProperty(name = "curPage", value = "当前页")
PagingQry.java: 23     @ApiModelProperty(name = "pageSize", value = "页码")
PortraitSaveCmd.java: 16 @ApiModel(value = "查询属性")
PortraitSaveCmd.java: 21     @ApiModelProperty(name = "entityId", value = "实体id", required = true)
PortraitSaveCmd.java: 24     @ApiModelProperty(name = "overview", value = "概览属性", required = true)
PortraitSaveCmd.java: 27     @ApiModelProperty(name = "basic", value = "基本属性", required = true)
PortraitQueryCmd.java: 12 @ApiModel(value = "查询属性")
PortraitQueryCmd.java: 18     @ApiModelProperty(name = "entityId", value = "实体id", required = false)
PortraitQueryCmd.java: 21     @ApiModelProperty(name = "fieldName", value = "字段名称", required = false)
IpAssociationExportTaskDTO.java: 67     @ExcelProperty(index = 6, value = "是否导入 IP")
RosterVerificationDownloadCmd.java: 17 @ApiModel(value = "下载名单查证导出名单")
RosterVerificationDownloadCmd.java: 21     @ApiModelProperty(name = "taskUuid", value = "任务 uuid", required = false)
RosterVerificationDownloadCmd.java: 28     @ApiModelProperty(name = "taskFileType", value = "任务文件类型", required = true)
RosterVerificationDownloadCmd.java: 31     @ApiModelProperty(name = "taskFileName", value = "任务文件名称", required = true)
RosterVerificationCreateCmd.java: 18 @ApiModel(value = "创建名单查证任务")
RosterVerificationCreateCmd.java: 22     @ApiModelProperty(name = "taskName", value = "任务名称", required = true)
RosterVerificationCreateCmd.java: 29     @ApiModelProperty(name = "taskType", value = "任务类型", required = true)
RosterVerificationCreateCmd.java: 32     @ApiModelProperty(name = "startDate", value = "开始时间", required = false)
RosterVerificationCreateCmd.java: 36     @ApiModelProperty(name = "endDate", value = "结束时间", required = false)
RosterVerificationCreateCmd.java: 40     @ApiModelProperty(name = "taskFile", value = "任务文件信息", required = true)
RosterVerificationCreateCmd.java: 43     @ApiModelProperty(name = "workspaceName", value = "工作图谱名称", required = true)
RosterVerificationTaskCmd.java: 15 @ApiModel("名单查证任务")
RosterVerificationTaskCmd.java: 23     @ApiModelProperty(name = "uuid", value = "唯一标识", required = true)
RosterVerificationTaskCmd.java: 26     @ApiModelProperty(name = "exeUuid", value = "执行标识", required = true)
RosterVerificationTaskCmd.java: 29     @ApiModelProperty(name = "workspaceName", value = "图谱名称", required = false)
RosterVerificationTemplateDownloadCmd.java: 17 @ApiModel(value = "下载名单查证模板文件")
RosterVerificationTemplateDownloadCmd.java: 25     @ApiModelProperty(name = "taskType", value = "任务类型", required = true)
RosterVerificationFileDeleteCmd.java: 15 @ApiModel(value = "名单查证任务删除 Cmd")
RosterVerificationFileDeleteCmd.java: 19     @ApiModelProperty("任务 uuid 文件名")
RosterVerificationSingleQueryCmd.java: 15 @ApiModel(value = "查询单条名单查证任务")
RosterVerificationSingleQueryCmd.java: 19     @ApiModelProperty(name = "taskUuid", value = "任务uuid", required = true)
RosterVerificationStopCmd.java: 15 @ApiModel(value = "停止名单查证任务")
RosterVerificationStopCmd.java: 19     @ApiModelProperty(name = "taskUuid", value = "任务uuid", required = true)
RosterVerificationStopCmd.java: 22     @ApiModelProperty(name = "workspaceName", value = "工作图谱名称", required = true)
RosterVerificationDeleteCmd.java: 15 @ApiModel(value = "删除名单查证任务")
RosterVerificationDeleteCmd.java: 19     @ApiModelProperty(name = "taskUuid", value = "任务uuid", required = true)
RosterVerificationQueryCmd.java: 15 @ApiModel(value = "查询名单查证任务")
RosterVerificationQueryCmd.java: 23     @ApiModelProperty(name = "taskType", value = "任务类型", required = true)
RosterVerificationQueryCmd.java: 26     @ApiModelProperty(name = "taskName", value = "任务名称", required = false)
RosterVerificationFileUploadCmd.java: 15 @ApiModel(value = "名单查证文件上传")
RosterVerificationUpdateCmd.java: 18 @ApiModel(value = "更新名单查证任务")
RosterVerificationUpdateCmd.java: 22     @ApiModelProperty(name = "uuid", value = "任务uuid", required = true)
RosterVerificationUpdateCmd.java: 25     @ApiModelProperty(name = "taskName", value = "任务名称", required = true)
RosterVerificationUpdateCmd.java: 32     @ApiModelProperty(name = "taskType", value = "任务类型", required = true)
RosterVerificationUpdateCmd.java: 35     @ApiModelProperty(name = "taskFile", value = "任务文件", required = true)
RosterVerificationUpdateCmd.java: 38     @ApiModelProperty(name = "startDate", value = "开始时间", required = false)
RosterVerificationUpdateCmd.java: 42     @ApiModelProperty(name = "endDate", value = "结束时间", required = false)
RosterVerificationRunCmd.java: 15 @ApiModel(value = "运行名单查证任务")
RosterVerificationRunCmd.java: 19     @ApiModelProperty(name = "uuid", value = "任务uuid", required = true)
RosterVerificationRunCmd.java: 22     @ApiModelProperty(name = "workspaceName", value = "工作图谱名称", required = true)
RosterVerificationTaskHistoryCmd.java: 15 @ApiModel(value = "名单查证运行历史")
RosterVerificationTaskHistoryCmd.java: 25     @ApiModelProperty(name = "curPage", value = "当前页")
RosterVerificationTaskHistoryCmd.java: 28     @ApiModelProperty(name = "pageSize", value = "页码")
RosterVerificationTaskHistoryCmd.java: 31     @ApiModelProperty(name = "exeUuid", value = "执行uuid", required = true)
BehavioralTrajectoryDomainServiceImpl.java: 42         COMPARE_ITEM.add("公司股东");
BehavioralTrajectoryDomainServiceImpl.java: 43         COMPARE_ITEM.add("公司实益拥有人");
BehavioralTrajectoryDomainServiceImpl.java: 44         COMPARE_ITEM.add("联合账户所有人");
BehavioralTrajectoryDomainServiceImpl.java: 45         COMPARE_ITEM.add("网上银行注册收款人");
BehavioralTrajectoryDomainServiceImpl.java: 46         COMPARE_ITEM.add("亲属关系");
ApplicationConfigCacheService.java: 63         GRAPH_CODE("graph_code", "图谱名称"),
ApplicationConfigCacheService.java: 67         EXPORT_LIMIT("export_limit", "限制交易明细导出的最大记录数"),
ApplicationConfigCacheService.java: 71         INSIGHT_CUST_REL_CONFIG("insight_cust_rel_config", "可疑名单排查指定行外客户需要关联行内客户的关系类型"),
ApplicationConfigCacheService.java: 75         PROFILE_IDV_REL_CONFIG("profile_idv_rel_config","个人客户-客户与客户列表、客户与非客户列表是否展示"),
ApplicationConfigCacheService.java: 79         PROFILE_ENT_REL_CONFIG("profile_ent_rel_config","公司客户-关联人列表、股东信息是否展示"),
ApplicationConfigCacheService.java: 83         PROFILE_IDV_REL_FORMAT("profile_idv_rel_format","个人客户-客户与客户列表、客户与非客户列表格式"),
ApplicationConfigCacheService.java: 87         PROFILE_ENT_REL_FORMAT("profile_ent_rel_format","公司客户-关联人列表、股东列表格式"),
ApplicationConfigCacheService.java: 91         PROFILE_GRAPH_CONFIG("profile_graph_config", "关联关系预览的默认展示规则"),
ApplicationConfigCacheService.java: 95         PROFILE_GRAPH_ANAYSIS_CONFIG("profile_graph_anaysis_config", "图析工具预览的默认展示规则"),
ApplicationConfigCacheService.java: 99         PROFILE_REL_NAME_PRIORITY("profile_rel_name_priority","客户画像-关联关系-客户中英文名优先级"),
BehavioralTrajectoryDomainServiceImplTest.java: 42                 "\t\"1655618838000\": \"{\\\"occurTime\\\":1655618838000,\\\"valueBefore\\\":\\\"低风险\\\",\\\"valueAfter\\\":\\\"高风险\\\"}\",\n" +
BehavioralTrajectoryDomainServiceImplTest.java: 43                 "\t\"1655359638000\": \"{\\\"occurTime\\\":1655359638000,\\\"valueBefore\\\":\\\"中风险\\\",\\\"valueAfter\\\":\\\"低风险\\\"}\"\n" +
BehavioralTrajectoryDomainServiceImplTest.java: 45                 "\t\"1658210838000\": \"{\\\"occurTime\\\":1658210838000,\\\"branch\\\":\\\"九龙分行\\\",\\\"account\\\":\\\"11223123A\\\",\\\"productName\\\":\\\"贷款产品\\\"}\"\n" +
BehavioralTrajectoryDomainServiceImplTest.java: 56         String s2 = "[{\"occurTime\":1647200839082,\"branch\":\"九龙分行\",\"account\":\"11223123A\",\"productName\":\"贷款产品\"},{\"occurTime\":1655618838000,\"valueBefore\":\"低风险\",\"valueAfter\":\"高风险\"}]";
BehavioralTrajectoryDomainServiceImplTest.java: 69                 "\t\"1655618838000\": \"{\\\"occurTime\\\":1655618838000,\\\"type\\\":3,\\\"valueBefore\\\":\\\"低风险\\\",\\\"valueAfter\\\":\\\"高风险\\\"}\",\n" +
BehavioralTrajectoryDomainServiceImplTest.java: 70                 "\t\"1655359638000\": \"{\\\"occurTime\\\":1655359638000,\\\"type\\\":3,\\\"valueBefore\\\":\\\"中风险\\\",\\\"valueAfter\\\":\\\"低风险\\\"}\"\n" +
BehavioralTrajectoryDomainServiceImplTest.java: 72                 "\t\"1658210838000\": \"{\\\"occurTime\\\":1658210838000,\\\"type\\\":3,\\\"branch\\\":\\\"九龙分行\\\",\\\"account\\\":\\\"11223123A\\\",\\\"productName\\\":\\\"贷款产品\\\"}\"\n" +
TransactionOverviewDomainServiceTest.java: 46         String customerId = "123", area = "台湾", startTimeStr = "2022-01", endTimeStr = "2022-07";
ExcelHeaderUtil.java: 247         log.info("导出文件名: {}", filename);
ExcelHeaderUtil.java: 261         log.info("导出文件名: {}", filename);
BehavioralTrajectoryType.java: 12     OPEN("open", "开户", 1),
BehavioralTrajectoryType.java: 13     SOLD_OUT("sold_out","销户",  2),
BehavioralTrajectoryType.java: 14     BASE_INFO_CHANGE("base_info_change","客户基本信息变更",  3),
BehavioralTrajectoryType.java: 15     RISK_LEVEL_CHANGE("risk_level_change","风险评级变更",  4);
ExternalCustomerField.java: 22     CUSTOM_ID("cst_id", "客户编号"),
ExternalCustomerField.java: 23     CUSTOM_TYPE("cst_tpcd", "客户类型"),
ExternalCustomerField.java: 24     EN_NAME("idv_lgl_nm", "英文名称"),
ExternalCustomerField.java: 25     CN_NAME("idcst_nm", "中文名称"),
ExternalCustomerField.java: 26     CRDT_NO("crdt_no", "证件号码"),
ExternalCustomerField.java: 27     BRTH_DATE("brth_dt", "出生日期"),
ExternalCustomerField.java: 28     PHONE("mblph_no", "电话号码"),
ExternalCustomerField.java: 29     UID("uid", "es记录里面的uid，一定存在"),
ExternalCustomerField.java: 30     FIX_TELNO("fix_telno", "固定电话"),
ExternalCustomerField.java: 31     CRDT_TYPE("crdt_tpcd","证件类型"),
ExternalCustomerField.java: 32     POLITICAL_FLAG("pltc_nmlst_ind","政要名单标志"),
ExternalCustomerField.java: 33     SEX("gnd_cd","性别"),
ExternalCustomerField.java: 34     NATIONALITY("rsdnc_nat_cd","国籍"),
ExternalCustomerField.java: 35     FIX_PHONE_NUMBER("fix_telno","固定电话号码"),
ExternalCustomerField.java: 36     MOBILE_PHONE_NUMBER("mblph_no","手机号码"),
ExternalCustomerField.java: 37     FAX_NUMBER("fax_no","传真号码"),
ExternalCustomerField.java: 38     EMAIL("email_nm","邮箱名称"),
ExternalCustomerField.java: 39     RELATIONSHIP_DES("rel_dsc","关系描述"),
ExternalCustomerField.java: 40     IDV_NM_SALUT_CD("idv_nm_salut_cd","个人名称称谓代码"),
ExternalCustomerField.java: 41     CTCPSN_ENG_NM("ctcpsn_eng_nm","联系人英文名");
IpLoginField.java: 14     PLAT_TXN_DATE("plat_txn_date", "登录日期"),
IpLoginField.java: 15     PLTFRM_TXN_TMS("pltfrm_txn_tms", "登录时间，时间戳"),
IpLoginField.java: 16     CST_ID("cst_id", "客户编号"),
IpLoginField.java: 17     CUST_ID("cust_id", "客户id"),
IpLoginField.java: 18     IP_ADR("ip_adr", "ip地址"),
IpLoginField.java: 19     CTY_CHN_NM("cty_chn_nm", "国家"),
IpLoginField.java: 20     BLNG_PRVC("blng_prvc", "省份"),
IpLoginField.java: 21     URBN_NM("urbn_nm", "城市");
CompanyCustomerField.java: 24     CUSTOM_ID("cst_id", "客户编号"),
CompanyCustomerField.java: 25     EN_NAME("cst_fullnm_en", "英文名称"),
CompanyCustomerField.java: 26     CN_NAME("cst_fullnm_cn", "中文名称"),
CompanyCustomerField.java: 27     CRDT_NO("id_inf_no", "证件号码"),
CompanyCustomerField.java: 28     CR("cr_no", "公司注册号"),
CompanyCustomerField.java: 29     BR("br_no", "商业登记号"),
CompanyCustomerField.java: 30     REGISTER_DATE("org_estb_dt", "注册日期"),
CompanyCustomerField.java: 31     PHONE("move_tel", "电话号码"),
CompanyCustomerField.java: 32     FAM_TEL("fam_tel", "家用/住宅号码"),
CompanyCustomerField.java: 33     WRK_TEL("wrk_tel", "办公/单位号码"),
CompanyCustomerField.java: 34     IS_INTERNAL("ccba_ind", "是否行内客户（是否CCBA 的客戶）"),
CompanyCustomerField.java: 35     MULTI_TENANCY_ID("mulit_tenancy_id", "多实体标识，企业客户通过多实体标识和组织编号唯一标识一个客户"),
CompanyCustomerField.java: 36     ORG_ID("org_id", "组织编号，企业客户通过多实体标识和组织编号唯一标识一个客户"),
CompanyCustomerField.java: 38     CRDT_TYPE("id_inf_tpcd","证件类型"),
CompanyCustomerField.java: 39     ALL_CRDT_NO("crdt_no_his", "所有证件，BR,CR,历史"),
CompanyCustomerField.java: 40     ALL_NAME("nm_his", "所有名称，中文，英文，历史");
PersonCustomerField.java: 22     EN_NAME("idv_lgl_nm", "英文名称"),
PersonCustomerField.java: 23     CN_NAME("idcst_nm", "中文名称"),
PersonCustomerField.java: 24     CRDT_NO("crdt_no", "证件号码,HKNO"),
PersonCustomerField.java: 25     BRIT_DATE("brth_dt", "出生日期"),
PersonCustomerField.java: 26     CUSTOM_ID("cst_id", "客户编号"),
PersonCustomerField.java: 27     PHONE("move_tel", "移动、手提电话号码"),
PersonCustomerField.java: 28     IS_INTERNAL("ccba_ind", "是否CCBA的客戶"),
PersonCustomerField.java: 29     FAM_TEL("fam_tel", "家用电话"),
PersonCustomerField.java: 30     WRK_TEL("wrk_tel", "办公、座机号码"),
PersonCustomerField.java: 31     OTH_CRDT_NO("oth_crdt_no", "客户其他证件号码"),
PersonCustomerField.java: 32     CRDT_TYPE("crdt_tpcd","证件类型"),
PersonCustomerField.java: 33     ALL_CRDT_NO("crdt_no_his", "所有证件号，包含历史证件号，HKId,otherId"),
PersonCustomerField.java: 34     ALL_NAME("nm_his", "所有名称，包含历史名称，中文，英文"),
PersonCustomerField.java: 35     ALL_PHONE_NUM("tel_his", "所有电话号码");
SparkTaskStatus.java: 22     READY("ready", "任务初始状态"),
SparkTaskStatus.java: 26     UN_SUBMIT("unsubmit", "未提交"),
SparkTaskStatus.java: 30     STARTING("starting", "任务提交中"),
SparkTaskStatus.java: 34     RUNNING("running", "任务运行中"),
SparkTaskStatus.java: 38     SUCCESS("success", "任务运行成功"),
SparkTaskStatus.java: 42     DEAD("dead", "任务提交/运行失败"),
SparkTaskStatus.java: 46     STOPPING("stopping", "任务停止中"),
SparkTaskStatus.java: 50     DESTROY("destroy", "任务停止成功"),
RosterVerifyTaskStatusEnum.java: 22     FAILED(-1, "失败"),
RosterVerifyTaskStatusEnum.java: 26     WAIT_EXECUTION(0, "待执行"),
RosterVerifyTaskStatusEnum.java: 30     RUNNING(1, "执行中"),
RosterVerifyTaskStatusEnum.java: 34     SUCCESS(2, "成功"),
RosterVerifyTaskStatusEnum.java: 38     STOP(3, "已停止")
RosterVerificationTaskType.java: 24     SUSPICIOUS_CUSTOMER(1, "susCus", "可疑客户名单排查"),
RosterVerificationTaskType.java: 28     IP_ASSOCIATION(2, "ipAssociate", "IP关联"),
PortraitExtraInfoCmdExec.java: 201                     idvOrEntFlag = "个人";
PortraitExtraInfoCmdExec.java: 207                     idvOrEntFlag = "公司";
PortraitExtraInfoCmdExec.java: 260                 idvOrEntFlag = "个人";
PortraitExtraInfoCmdExec.java: 266                 idvOrEntFlag = "公司";
CounterpartyExportCmdExec.java: 69             map.put(header[1], counterpartyInfo.getInternalCustomer() ? "是" : "否");
SuspiciousCustomerTaskExec.java: 128         String nonMatchFile = writeResult("未关联" + suspiciousCustomerTaskDTO.getTaskName(), nonMatchResult, SuspiciousCustomerImportTaskDTO.class);
IpAssociationTaskExec.java: 109             RosterTaskFileDTO nonMatchResultFile = new RosterTaskFileDTO("未关联" + taskFileName, nonMatchFileName);